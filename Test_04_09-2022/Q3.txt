Q3. 
How to Use CSS in React
Explain all methods by using a small code snippet.

Ans:

1.  External Stylesheet

You can create a new CSS file in your project directory and add your CSS inside it. You can then import it in your component, class or React JS page.

The following code is used to import an external CSS stylesheet.
import "./styles.css";

2. Inline CSS

Probably the most common and quickest out of all 3 is inline CSS. However it has many disadvantages and it is generally discouraged to use unless it is a very small application.
Basically, we create an object that contains different references which are then called using the style{} attribute.
For example, the CSS is added like this:

const styles = {
  section: {
    fontSize: "18px",
    color: "#292b2c",
    backgroundColor: "#fff",
    padding: "0 20px"
  },
  wrapper: {
    textAlign: "center",
    margin: "0 auto",
    marginTop: "50px"
  }
}



3. Styled Components

Probably the most powerful and useful in my opinion is Styled Components. Styled Components lets you write actual CSS in your JavaScript. The main advantage is that you can add conditional code and use variables and functions within the CSS!.

You can install Styled Components using the following command:
npm install --save styled-components
Next, you need to import it in you component. Then you can create a new variable that will contain the CSS. The same variable name with open and close brackets will render or create an HTML element with the previously added styles on it.

import styled from 'styled-components'
// Create a button variable and add CSS
const Button = styled.button`
  background: transparent;
  border-radius: 3px;
  border: 2px solid red;
  color:red;
`
//display the HTML
render(
  <div>
    <Button>Button</Button>
  </div>
);


4. CSS Modules
You can also add scoped styles quite easily, you just need to create a file with the extension .module.css, like this:
// ComponentName.module.css

.Red {
  color: #f00;
}

.Blue {
  color: #00f;
}